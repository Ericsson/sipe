From 528aec37edb45e33ac1dd1ee7f28238ca0fdd65a Mon Sep 17 00:00:00 2001
From: Jakub Adam <jakub.adam@ktknet.cz>
Date: Sat, 18 Dec 2010 21:52:49 +0100
Subject: [PATCH] Hanging up a video call freezes other running calls

---
 libpurple/media/backend-fs2.c |   23 ++++++++++++++++++++++-
 libpurple/mediamanager.c      |    2 ++
 2 files changed, 24 insertions(+), 1 deletions(-)

diff --git a/libpurple/media/backend-fs2.c b/libpurple/media/backend-fs2.c
index 54c4d5b..08eea5f 100644
--- a/libpurple/media/backend-fs2.c
+++ b/libpurple/media/backend-fs2.c
@@ -129,6 +129,8 @@ struct _PurpleMediaBackendFs2Session
 	GstElement *src;
 	GstElement *tee;
 
+	GstPad *srcpad;
+
 	PurpleMediaSessionType type;
 };
 
@@ -171,6 +173,22 @@ purple_media_backend_fs2_dispose(GObject *obj)
 		pipeline = purple_media_manager_get_pipeline(
 				purple_media_get_manager(priv->media));
 
+		/* All connections to media sources should be blocked before confbin is
+		 * removed, to prevent freezing of any other simultaneously running
+		 * media calls. */
+		if (priv->sessions) {
+			GList *sessions = g_hash_table_get_values(priv->sessions);
+			for (; sessions; sessions =
+					g_list_delete_link(sessions, sessions)) {
+				PurpleMediaBackendFs2Session *session = sessions->data;
+				if (session->srcpad) {
+					gst_pad_set_blocked(session->srcpad, TRUE);
+					gst_object_unref(session->srcpad);
+					session->srcpad = NULL;
+				}
+			}
+		}
+
 		gst_element_set_locked_state(priv->confbin, TRUE);
 		gst_element_set_state(GST_ELEMENT(priv->confbin),
 				GST_STATE_NULL);
@@ -1263,6 +1281,7 @@ create_src(PurpleMediaBackendFs2 *self, const gchar *sess_id,
 			session_type_to_fs_stream_direction(type);
 	GstElement *src;
 	GstPad *sinkpad, *srcpad;
+	GstPad *ghost = NULL;
 
 	if ((type_direction & FS_DIRECTION_SEND) == 0)
 		return TRUE;
@@ -1302,7 +1321,7 @@ create_src(PurpleMediaBackendFs2 *self, const gchar *sess_id,
 	if (GST_ELEMENT_PARENT(priv->confbin)
 			== GST_ELEMENT_PARENT(session->src)) {
 		GstPad *pad = gst_element_get_static_pad(session->tee, "sink");
-		GstPad *ghost = gst_ghost_pad_new(NULL, pad);
+		ghost = gst_ghost_pad_new(NULL, pad);
 		gst_object_unref(pad);
 		gst_pad_set_active(ghost, TRUE);
 		gst_element_add_pad(priv->confbin, ghost);
@@ -1310,6 +1329,8 @@ create_src(PurpleMediaBackendFs2 *self, const gchar *sess_id,
 
 	gst_element_set_state(session->tee, GST_STATE_PLAYING);
 	gst_element_link(session->src, priv->confbin);
+	if (ghost)
+		session->srcpad = gst_pad_get_peer(ghost);
 
 	g_object_get(session->session, "sink-pad", &sinkpad, NULL);
 	if (session->type & PURPLE_MEDIA_SEND_AUDIO) {
diff --git a/libpurple/mediamanager.c b/libpurple/mediamanager.c
index e6f8a46..584eb34 100644
--- a/libpurple/mediamanager.c
+++ b/libpurple/mediamanager.c
@@ -400,6 +400,8 @@ request_pad_unlinked_cb(GstPad *pad, GstPad *peer, gpointer user_data)
 	GstIteratorResult result;
 
 	gst_element_release_request_pad(GST_ELEMENT_PARENT(pad), pad);
+	gst_pad_set_blocked(pad, FALSE);
+
 	iter = gst_element_iterate_src_pads(parent);
 
 	result = gst_iterator_next(iter, (gpointer)&remaining_pad);
-- 
1.7.2.3

